{"version":3,"sources":["types/WeatherListItem.ts","apis/WeatherService.ts","context/navbarContext.ts","context/darkModeContext.ts","context/fetchingContext.ts","context/weatherDataContext.ts","components/Error.tsx","components/Loader.tsx","hoc/withData.tsx","components/Chart.tsx","components/DayPage.tsx","components/Header.tsx","components/Navbar.tsx","components/WeatherItem.tsx","components/WeatherList.tsx","components/App.tsx","index.tsx"],"names":["WeatherListItem","dayObj","dtText","day","hours","icon","description","temp","humidity","pressure","dt","weather","this","dt_txt","Date","getWeekDay","getHours","Math","round","main","WEEK_DAYS","getDay","toString","length","WeatherService","query","fetch","BASE_URL","res","ok","json","weatherData","status","Error","data","list","days","i","ceil","slice","weatherList","map","name","city","isDummyData","console","log","weatherDataJSON","validateData","fetchWeather","lat","lon","NavbarContext","React","createContext","DarkModeContext","FetchingContext","WeatherDataContext","message","Alert","style","borderRadius","severity","AlertTitle","useStyles","makeStyles","wrapper","display","justifyContent","alignItems","paddingTop","Loader","classes","className","CircularProgress","withData","Child","props","useContext","error","isLoading","other","isError","am4core","am4themes_animated","root","width","height","paper","padding","marginTop","Chart","useTheme","palette","background","text","type","useEffect","chart","am4charts","dateAxis","xAxes","push","renderer","grid","template","location","tooltip","fill","primary","strokeWidth","label","default","stroke","labels","valueAxis","yAxes","disabled","minWidth","series","dataFields","dateX","valueY","tooltipText","cursor","behavior","dispose","Paper","id","theme","position","marginRight","top","right","center","image","backgroundColor","light","container","spacing","paddingBottom","cardHeader","flexWrap","paddingRight","endAnimation","closeNavbar","useParams","index","parseInt","undefined","to","Container","Typography","variant","component","Grid","item","src","alt","flexGrow","menuButton","search","shape","fade","common","white","breakpoints","up","marginLeft","searchIcon","pointerEvents","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Header","useState","cityName","setCityName","currentPlace","setWeatherByCityName","toggleNavbar","AppBar","Toolbar","IconButton","edge","aria-label","onClick","Menu","Search","onSubmit","InputBase","onChange","e","target","value","placeholder","input","inputProps","content","homeBtn","flex","btnGroup","switchContainer","action","hover","switchInfo","switchBtn","BottomNavigation","bottom","left","BottomNavigationAction","Navbar","history","useHistory","isOpen","isDarkMode","toggleDarkMode","Drawer","open","onClose","ButtonGroup","Button","event","startIcon","HomeOutlined","Close","Divider","FormControlLabel","checked","NightsStayOutlined","WbSunnyOutlined","control","Switch","rel","href","Mail","GitHub","Telegram","marginBottom","opacity","isAnimationEnds","animation","animationDelay","weatherIconWrapper","weatherIcon","fontWeight","transform","title","down","fontSize","gridContainer","lineHeight","WeatherItem","Card","CardActionArea","CardContent","App","setIsOpen","setIsDarkMode","setWeatherData","setIsLoading","setIsAnimationEnds","setError","navigator","geolocation","getCurrentPosition","coords","fetchWeatherByCoords","latitude","longitude","then","catch","catchWeatherAPIError","finally","catchPositionError","onError","err","code","useMemo","createMuiTheme","ThemeProvider","Provider","key","prevState","preventDefault","document","querySelector","blur","fetchWeatherByCityName","CssBaseline","path","WeatherList","exact","DayPage","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.03002b26.chunk.js","sourcesContent":["import { IWeatherListItem } from './'\r\n\r\nexport default class WeatherListItem implements IWeatherListItem {\r\n    static WEEK_DAYS = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота']\r\n    dtText: string\r\n    day: string\r\n    hours: string\r\n    icon: string\r\n    description: string\r\n    temp: number\r\n    humidity: number\r\n    pressure: number\r\n    dt: Date\r\n\r\n    constructor(dayObj: any) {\r\n        const { icon, description } = dayObj.weather[0]\r\n\r\n        this.dtText = dayObj.dt_txt\r\n        this.dt = new Date(dayObj.dt_txt)\r\n        this.day = this.getWeekDay(this.dt)\r\n        this.hours = this.getHours(this.dt)\r\n        this.icon = icon\r\n        this.description = description\r\n        this.temp = Math.round(dayObj.main.temp)\r\n        this.humidity = dayObj.main.humidity\r\n        this.pressure = dayObj.main.pressure\r\n    }\r\n\r\n    private getWeekDay(dt: Date): string {\r\n        return WeatherListItem.WEEK_DAYS[dt.getDay()]\r\n    }\r\n\r\n    private getHours(dt: Date): string {\r\n        let hours = dt.getHours().toString()\r\n\r\n        if (hours.length < 2) {\r\n            hours = `0${hours}`\r\n        }\r\n\r\n        return hours + ':00'\r\n    }\r\n}","import { WeatherListItem, IWeatherData } from '../types'\r\nimport weatherDataJSON from './weatherData.json'\r\n\r\nclass WeatherService {\r\n    private static BASE_URL: string = 'https://community-open-weather-map.p.rapidapi.com/forecast?lang=ru&units=metric&'\r\n    private static isDummyData = false\r\n\r\n    private static async fetchWeather(query: string) {\r\n        const res = await fetch(this.BASE_URL + query, {\r\n            \"headers\": {\r\n                \"x-rapidapi-key\": \"eb194c61cdmsh690666316ffae94p1ca362jsn7379733fcfa0\",\r\n                \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\r\n            }\r\n        })\r\n\r\n        if (res.ok) {\r\n            const weatherData = await res.json()\r\n            return weatherData\r\n        }\r\n\r\n        switch (res.status) {\r\n            case 404: throw new Error('404')\r\n            case 429: throw new Error('429')\r\n            default: throw new Error()\r\n        }\r\n    }\r\n\r\n    private static validateData(data: any): IWeatherData {\r\n        const { list } = data\r\n\r\n        const size = 8\r\n        const days = []\r\n        for (let i = 0; i < Math.ceil(list.length / size); i++) {\r\n            days[i] = list.slice((i * size), (i * size) + size)\r\n        }\r\n\r\n        return {\r\n            weatherList: days.map(day => {\r\n                return day.map((dayObj: any) => new WeatherListItem(dayObj))\r\n            }),\r\n            name: data.city.name\r\n        }\r\n    }\r\n\r\n    public static async fetchWeatherByCityName(city: string) {\r\n        if (this.isDummyData) {\r\n            console.log(weatherDataJSON)\r\n            return this.validateData(weatherDataJSON)\r\n        }\r\n        const data = await this.fetchWeather(`q=${city}`)\r\n        return this.validateData(data)\r\n    }\r\n\r\n    public static async fetchWeatherByCoords(lat: string | number, lon: string | number) {\r\n        if (this.isDummyData) {\r\n            console.log(weatherDataJSON)\r\n            return this.validateData(weatherDataJSON)\r\n        }\r\n        const data = await this.fetchWeather(`lat=${lat}&lon=${lon}`)\r\n        return this.validateData(data)\r\n    }\r\n}\r\n\r\nexport default WeatherService","import React from 'react'\r\nimport { INavbarContext } from '../types/context'\r\n\r\nexport const NavbarContext = React.createContext<Partial<INavbarContext>>({})","import React from 'react'\r\nimport { IDarkModeContext } from '../types/context'\r\n\r\nexport const DarkModeContext = React.createContext<Partial<IDarkModeContext>>({})","import React from 'react'\r\nimport { IFetchingContext } from '../types/context'\r\n\r\nexport const FetchingContext = React.createContext<Partial<IFetchingContext>>({})","import React from 'react'\r\nimport { IWeatherDataContext } from '../types/context'\r\n\r\nexport const WeatherDataContext = React.createContext<Partial<IWeatherDataContext>>({})","import React from 'react'\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\ntype Props = {\r\n    message: string\r\n}\r\n\r\nconst Error: React.FC<Props> = ({ message }) => {\r\n    return (\r\n        <Alert style={{ borderRadius: 0 }} severity=\"error\">\r\n            <AlertTitle>Ошибка</AlertTitle>\r\n            {message}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Error","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    wrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingTop: '35vh'\r\n    }\r\n})\r\n\r\ntype Props = {\r\n    style?: React.CSSProperties\r\n}\r\n\r\nconst Loader: React.FC<Props> = ({ style }) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div style={style} className={classes.wrapper}>\r\n            <CircularProgress />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, { useContext } from 'react'\r\n\r\nimport { FetchingContext } from '../context'\r\n\r\nimport Error from '../components/Error'\r\nimport Loader from '../components/Loader'\r\n\r\ntype Props = {\r\n    style?: React.CSSProperties\r\n}\r\n\r\nconst withData = <P extends Object>(Child: React.ComponentType<P>): React.FC<P & Props> => (props) => {\r\n    const { error, isLoading } = useContext(FetchingContext)\r\n    const { style, ...other } = props\r\n\r\n    if (error!.isError) {\r\n        return <Error message={error!.message} />\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <Loader style={style} />\r\n    }\r\n\r\n    return <Child {...other as P} />\r\n}\r\n\r\nexport default withData","import React, { useEffect } from 'react'\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\"\r\nimport { makeStyles, Paper, useTheme } from '@material-ui/core'\r\nimport * as am4core from '@amcharts/amcharts4/core'\r\nimport * as am4charts from '@amcharts/amcharts4/charts'\r\nimport { IWeatherListItem } from '../types'\r\n\r\nam4core.useTheme(am4themes_animated)\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        height: '45vh'\r\n    },\r\n    paper: {\r\n        padding: '1.5rem 1rem 1rem 1rem',\r\n        marginTop: '0.5rem'\r\n    }\r\n})\r\n\r\ntype Props = {\r\n    weatherList: IWeatherListItem[]\r\n}\r\n\r\nconst Chart: React.FC<Props> = ({ weatherList }) => {\r\n    const { palette: { background, text, type } } = useTheme()\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n\r\n        const chart = am4core.create('chart', am4charts.XYChart)\r\n        chart.data = weatherList\r\n\r\n        const dateAxis = chart.xAxes.push(new am4charts.DateAxis())\r\n        dateAxis.renderer.grid.template.location = 0\r\n        dateAxis.tooltip!.background.fill = am4core.color(text.primary)\r\n        dateAxis.tooltip!.background.strokeWidth = 0\r\n        dateAxis.tooltip!.label.fill = am4core.color(background.default)\r\n        dateAxis.renderer.grid.template.stroke = am4core.color(text.primary)\r\n        dateAxis.renderer.labels.template.fill = am4core.color(text.primary)\r\n\r\n        const valueAxis = chart.yAxes.push(new am4charts.ValueAxis())\r\n        valueAxis!.tooltip!.disabled = true\r\n        valueAxis.renderer.minWidth = 35\r\n        valueAxis.renderer.grid.template.stroke = am4core.color(text.primary)\r\n        valueAxis.renderer.labels.template.fill = am4core.color(text.primary)\r\n\r\n        const series = chart.series.push(new am4charts.LineSeries())\r\n        series.dataFields.dateX = 'dt'\r\n        series.dataFields.valueY = 'temp'\r\n        series.tooltipText = '{valueY.value}'\r\n        if (type === 'dark') {\r\n            series.stroke = am4core.color('#fff')\r\n        }\r\n\r\n        chart.cursor = new am4charts.XYCursor()\r\n        chart.cursor.behavior = 'none';\r\n        return () => {\r\n            chart.dispose()\r\n        }\r\n\r\n    }, [type, weatherList])\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div id=\"chart\" className={classes.root}></div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Chart","import React, { useContext, useEffect } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { Container, Grid, Paper, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { NavbarContext, FetchingContext, WeatherDataContext } from '../context'\r\nimport withData from '../hoc/withData'\r\n\r\nimport Chart from './Chart'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    temp: {\r\n        position: 'relative',\r\n        marginRight: '2rem',\r\n        '&>sup': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            right: '-1rem'\r\n        }\r\n    },\r\n    center: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    image: {\r\n        width: 100,\r\n        height: 100,\r\n        borderRadius: '50%',\r\n        backgroundColor: theme.palette.primary.light\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    cardHeader: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap',\r\n        '&>*:first-child': {\r\n            paddingRight: theme.spacing(2)\r\n        }\r\n    },\r\n}))\r\n\r\ntype Params = {\r\n    id: string\r\n}\r\n\r\nconst DayPage = () => {\r\n    const { weatherList } = useContext(WeatherDataContext)\r\n    const { endAnimation } = useContext(FetchingContext)\r\n    const { closeNavbar } = useContext(NavbarContext)\r\n    const { id } = useParams<Params>()\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        closeNavbar!()\r\n        endAnimation!()\r\n\r\n        return () => {\r\n            closeNavbar!()\r\n        }\r\n    }, [])\r\n\r\n    const index = parseInt(id)\r\n\r\n    if (weatherList![index] === undefined) return <Redirect to=\"/\" />\r\n\r\n    const { day, description, hours, icon, temp, humidity, pressure } = weatherList![index][0]\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Paper className={classes.paper}>\r\n                <div className={classes.cardHeader}>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {day} {hours}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" component=\"div\">\r\n                        {description}\r\n                    </Typography>\r\n                </div>\r\n                <Grid className={classes.center} container>\r\n                    <Grid className={classes.center} item>\r\n                        <Typography className={classes.temp} variant=\"h2\" component=\"div\">\r\n                            {temp}\r\n                            <Typography variant=\"caption\" component=\"sup\">\r\n                                °C\r\n                            </Typography>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.center} item>\r\n                        <img className={classes.image} src={`http://openweathermap.org/img/wn/${icon}@4x.png`} alt={description} />\r\n                    </Grid>\r\n                </Grid>\r\n                <Typography variant=\"subtitle1\" component=\"div\">\r\n                    Влажность: {humidity}%\r\n                    </Typography>\r\n                <Typography variant=\"subtitle1\" component=\"div\">\r\n                    Давление: {pressure} мм рт.\r\n                </Typography>\r\n            </Paper>\r\n            <Chart weatherList={weatherList![index]} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default withData(DayPage)","import React, { useContext, useState } from 'react'\r\nimport { makeStyles, fade } from '@material-ui/core/styles'\r\nimport { Menu, Search } from '@material-ui/icons'\r\nimport {\r\n    InputBase,\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n} from '@material-ui/core'\r\n\r\nimport { NavbarContext, WeatherDataContext } from '../context'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        width: '100%'\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    }\r\n}));\r\n\r\nconst Header = () => {\r\n    const [cityName, setCityName] = useState('')\r\n    const { currentPlace, setWeatherByCityName } = useContext(WeatherDataContext)\r\n    const { toggleNavbar } = useContext(NavbarContext)\r\n    const classes = useStyles()\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setCityName(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleNavbar!(true)}>\r\n                        <Menu />\r\n                    </IconButton>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <Search />\r\n                        </div>\r\n                        <form onSubmit={setWeatherByCityName!(cityName)}>\r\n                            <InputBase\r\n                                onChange={onChange}\r\n                                value={cityName}\r\n                                placeholder={currentPlace!.length > 0 ? currentPlace : \"Search…\"}\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                            />\r\n                        </form>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header","import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Close,\r\n    NightsStayOutlined,\r\n    HomeOutlined,\r\n    WbSunnyOutlined,\r\n    Mail,\r\n    GitHub,\r\n    Telegram\r\n} from '@material-ui/icons'\r\nimport {\r\n    Button,\r\n    Divider,\r\n    Drawer,\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n    ButtonGroup,\r\n    FormControlLabel,\r\n    Switch\r\n} from '@material-ui/core'\r\n\r\nimport { NavbarContext } from '../context/navbarContext'\r\nimport { DarkModeContext } from '../context'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        width: 260,\r\n    },\r\n    homeBtn: {\r\n        flex: 1\r\n    },\r\n    btnGroup: {\r\n        display: 'flex'\r\n    },\r\n    switchContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        marginRight: 0,\r\n        padding: '0 1rem',\r\n        transition: 'background-color ease 250ms',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    switchInfo: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        flex: 1\r\n    },\r\n    switchBtn: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    BottomNavigation: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n    BottomNavigationAction: {\r\n        minWidth: 60,\r\n        transition: 'background-color ease 250ms',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    }\r\n}))\r\n\r\nconst Navbar = () => {\r\n    const history = useHistory()\r\n    const { isOpen, toggleNavbar } = useContext(NavbarContext)\r\n    const { isDarkMode, toggleDarkMode } = useContext(DarkModeContext)\r\n    const classes = useStyles()\r\n\r\n    const onHomeClick = (event: React.MouseEvent) => {\r\n        toggleNavbar!(false)(event)\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <Drawer open={isOpen} onClose={toggleNavbar!(false)}>\r\n            <div className={classes.content}>\r\n                <ButtonGroup className={classes.btnGroup} variant=\"text\">\r\n                    <Button onClick={onHomeClick} className={classes.homeBtn} startIcon={<HomeOutlined />} >\r\n                        Home\r\n                    </Button>\r\n                    <Button onClick={toggleNavbar!(false)}>\r\n                        <Close />\r\n                    </Button>\r\n                </ButtonGroup>\r\n                <Divider />\r\n                <FormControlLabel\r\n                    className={classes.switchContainer}\r\n                    checked={isDarkMode}\r\n                    onChange={toggleDarkMode}\r\n                    label={<span className={classes.switchBtn}>{isDarkMode ? <NightsStayOutlined /> : <WbSunnyOutlined />}</span>}\r\n                    control={\r\n                        <Switch\r\n                            name=\"theme-switch\"\r\n                            color=\"default\"\r\n                        />\r\n                    }\r\n                />\r\n                <Divider />\r\n                <BottomNavigation className={classes.BottomNavigation} >\r\n                    <BottomNavigationAction\r\n                        className={classes.BottomNavigationAction}\r\n                        rel=\"noopener\"\r\n                        target=\"_blank\"\r\n                        href=\"mailto:alexandr.bulgatov13@gmail.com\"\r\n                        icon={<Mail />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.BottomNavigationAction}\r\n                        rel=\"noopener\"\r\n                        target=\"_blank\"\r\n                        href=\"https://github.com/doyouwannatea/\"\r\n                        icon={<GitHub />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.BottomNavigationAction}\r\n                        rel=\"noopener\"\r\n                        target=\"_blank\"\r\n                        href=\"https://t.me/doyouwannatea\"\r\n                        icon={<Telegram />}\r\n                    />\r\n                </BottomNavigation>\r\n            </div>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Grid,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    Typography,\r\n    Theme,\r\n} from \"@material-ui/core\"\r\n\r\nimport { IWeatherListItem } from '../types'\r\nimport { FetchingContext } from '../context'\r\n\r\nconst useStyles = makeStyles<Theme, MakeStylesProps>((theme) => ({\r\n    root: {\r\n        borderRadius: 0,\r\n        marginBottom: 2,\r\n        opacity: ({ isAnimationEnds }) => isAnimationEnds ? 1 : 0,\r\n        animation: ({ isAnimationEnds }) => isAnimationEnds ? '' : 'bounceInLeft 800ms ease forwards',\r\n        animationDelay: ({ index }) => `${index * 100}ms`\r\n    },\r\n    content: {\r\n        position: 'relative',\r\n        paddingRight: 105,\r\n    },\r\n    weatherIconWrapper: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginRight: '1rem',\r\n    },\r\n    weatherIcon: {\r\n        width: 70,\r\n        height: 70,\r\n        borderRadius: '50%',\r\n        backgroundColor: theme.palette.primary.light\r\n    },\r\n    temp: {\r\n        minWidth: 50,\r\n        fontWeight: 100,\r\n        position: 'absolute',\r\n        right: 16,\r\n        top: '50%',\r\n        transform: 'translateY(-50%)'\r\n    },\r\n    title: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: 18\r\n        }\r\n    },\r\n    gridContainer: {\r\n        flexWrap: 'nowrap'\r\n    },\r\n    description: {\r\n        lineHeight: 1,\r\n        opacity: 0.9,\r\n        fontWeight: 100\r\n    }\r\n}))\r\n\r\ntype MakeStylesProps = {\r\n    index: number\r\n    isAnimationEnds: boolean | undefined\r\n}\r\n\r\ntype Props = {\r\n    index: number\r\n} & IWeatherListItem\r\n\r\nconst WeatherItem: React.FC<Props> = ({ day, icon, description, temp, index }) => {\r\n    const { isAnimationEnds } = useContext(FetchingContext)\r\n    const history = useHistory()\r\n    const classes = useStyles({ index, isAnimationEnds })\r\n\r\n    const clickHandler = () => {\r\n        history.push(`/${index}`)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea onClick={clickHandler}>\r\n                <CardContent className={classes.content}>\r\n                    <Grid className={classes.gridContainer} container>\r\n                        <Grid item className={classes.weatherIconWrapper}>\r\n                            <img src={`http://openweathermap.org/img/wn/${icon}@4x.png`} alt={description} className={classes.weatherIcon} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography className={classes.title} variant=\"h5\" component=\"div\">\r\n                                {day}\r\n                            </Typography>\r\n                            <Typography className={classes.description} variant=\"subtitle1\" component=\"div\">\r\n                                {description}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Typography className={classes.temp} variant=\"h4\" component=\"div\">\r\n                            {temp}°С\r\n                        </Typography>\r\n                    </Grid>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default WeatherItem","import React, { useContext } from 'react'\r\n\r\nimport { WeatherDataContext } from '../context'\r\nimport withData from '../hoc/withData'\r\n\r\nimport WeatherItem from './WeatherItem'\r\n\r\nconst WeatherList = () => {\r\n    const { weatherList } = useContext(WeatherDataContext)\r\n\r\n    return (\r\n        <div className=\"weather-wrapper\">\r\n            {\r\n                weatherList!.map((day, index) => (\r\n                    <WeatherItem key={day[0].dtText} index={index} {...day[0]} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default withData(WeatherList)","import React, { useEffect, useState } from 'react'\r\nimport { createMuiTheme, CssBaseline, ThemeProvider } from '@material-ui/core'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport { IError, IWeatherData } from '../types'\r\nimport WeatherService from '../apis/WeatherService'\r\nimport { NavbarContext, DarkModeContext, FetchingContext, WeatherDataContext } from '../context'\r\n\r\nimport DayPage from './DayPage'\r\nimport Header from './Header'\r\nimport Navbar from './Navbar'\r\nimport WeatherList from './WeatherList'\r\n\r\nconst App = () => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [isDarkMode, setIsDarkMode] = useState(false)\r\n  const [weatherData, setWeatherData] = useState<IWeatherData>({ weatherList: [], name: '' })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isAnimationEnds, setIsAnimationEnds] = useState(false)\r\n  const [error, setError] = useState<IError>({ isError: false, message: '' })\r\n\r\n  const { name, weatherList } = weatherData\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      setIsLoading(true)\r\n      navigator.geolocation.getCurrentPosition(({ coords }) => {\r\n        WeatherService.fetchWeatherByCoords(coords.latitude, coords.longitude)\r\n          .then(setWeatherData)\r\n          .catch(catchWeatherAPIError)\r\n          .finally(() => setIsLoading(false))\r\n      }, catchPositionError)\r\n    } else {\r\n      onError('Геолокация недоступна, введите город вручную.')\r\n    }\r\n  }, [])\r\n\r\n  const onError = (message: string) => {\r\n    setError({\r\n      isError: true,\r\n      message\r\n    })\r\n  }\r\n\r\n  const resetError = () => {\r\n    setError({\r\n      isError: false,\r\n      message: ''\r\n    })\r\n  }\r\n\r\n  const resetWeatherData = () => {\r\n    setWeatherData({\r\n      name: '',\r\n      weatherList: []\r\n    })\r\n  }\r\n\r\n  const catchPositionError = (err: GeolocationPositionError) => {\r\n    switch (err.code) {\r\n      case 1:\r\n        onError('Геолокация выключена, введите местоположение вручную.')\r\n        break\r\n      case 2:\r\n        onError('Не удалось получить геолокацию.')\r\n        break\r\n      default:\r\n        onError('Ошибка сети или сервера.')\r\n        break\r\n    }\r\n  }\r\n\r\n  const catchWeatherAPIError = (err: Error) => {\r\n    switch (err.message) {\r\n      case '404':\r\n        onError('Город не найден.')\r\n        break\r\n      case '429':\r\n        onError('Слишком много запросов в минуту.')\r\n        break\r\n      default:\r\n        onError('Ошибка сети или сервера.')\r\n        break\r\n    }\r\n    resetWeatherData()\r\n  }\r\n\r\n  const setWeatherByCityName = (city: string) => (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (city.length > 0) {\r\n      setIsAnimationEnds(false)\r\n      document.querySelector('input')?.blur()\r\n      resetError()\r\n      setIsLoading(true)\r\n      WeatherService.fetchWeatherByCityName(city)\r\n        .then(setWeatherData)\r\n        .catch(catchWeatherAPIError)\r\n        .finally(() => setIsLoading(false))\r\n    }\r\n  }\r\n\r\n  const toggleNavbar = (open: boolean) => (\r\n    event: React.KeyboardEvent | React.MouseEvent,\r\n  ) => {\r\n    if (\r\n      event.type === 'keydown' &&\r\n      ((event as React.KeyboardEvent).key === 'Tab' ||\r\n        (event as React.KeyboardEvent).key === 'Shift')\r\n    ) {\r\n      return\r\n    }\r\n\r\n    setIsOpen(open)\r\n  }\r\n\r\n  const closeNavbar = () => setIsOpen(false)\r\n\r\n  const toggleDarkMode = () => setIsDarkMode(prevState => !prevState)\r\n\r\n  const endAnimation = () => setIsAnimationEnds(true)\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: isDarkMode ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [isDarkMode],\r\n  )\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <NavbarContext.Provider value={{ isOpen, toggleNavbar, closeNavbar }} >\r\n        <DarkModeContext.Provider value={{ isDarkMode, toggleDarkMode }}>\r\n          <FetchingContext.Provider value={{ error, isLoading, endAnimation, isAnimationEnds }}>\r\n            <WeatherDataContext.Provider value={{ setWeatherByCityName, currentPlace: name, weatherList }}>\r\n              <CssBaseline />\r\n              <Router>\r\n                <Header />\r\n                <Navbar />\r\n                <Switch>\r\n                  <Route path=\"/\" component={WeatherList} exact />\r\n                  <Route path=\"/:id\" component={DayPage} exact />\r\n                  <Route path=\"*\">\r\n                    <Redirect to=\"/\" />\r\n                  </Route>\r\n                </Switch>\r\n              </Router>\r\n            </WeatherDataContext.Provider>\r\n          </FetchingContext.Provider>\r\n        </DarkModeContext.Provider>\r\n      </NavbarContext.Provider>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './components/App'\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}
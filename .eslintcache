[{"D:\\programming\\js\\react\\react-weather\\src\\index.tsx":"1","D:\\programming\\js\\react\\react-weather\\src\\components\\App.tsx":"2","D:\\programming\\js\\react\\react-weather\\src\\components\\Header.tsx":"3","D:\\programming\\js\\react\\react-weather\\src\\components\\WeatherList.tsx":"4","D:\\programming\\js\\react\\react-weather\\src\\components\\Navbar.tsx":"5","D:\\programming\\js\\react\\react-weather\\src\\components\\WeatherItem.tsx":"6","D:\\programming\\js\\react\\react-weather\\src\\apis\\WeatherService.ts":"7","D:\\programming\\js\\react\\react-weather\\src\\types\\index.ts":"8","D:\\programming\\js\\react\\react-weather\\src\\components\\Error.tsx":"9","D:\\programming\\js\\react\\react-weather\\src\\components\\Loader.tsx":"10","D:\\programming\\js\\react\\react-weather\\src\\types\\WeatherListItem.ts":"11","D:\\programming\\js\\react\\react-weather\\src\\components\\MainPage.tsx":"12","D:\\programming\\js\\react\\react-weather\\src\\context\\index.ts":"13","D:\\programming\\js\\react\\react-weather\\src\\context\\weatherDataContext.ts":"14","D:\\programming\\js\\react\\react-weather\\src\\context\\fetchingContext.ts":"15","D:\\programming\\js\\react\\react-weather\\src\\context\\asideContext.ts":"16","D:\\programming\\js\\react\\react-weather\\src\\context\\darkModeContext.ts":"17"},{"size":182,"mtime":1608717067620,"results":"18","hashOfConfig":"19"},{"size":4057,"mtime":1609759893720,"results":"20","hashOfConfig":"19"},{"size":3610,"mtime":1609760045725,"results":"21","hashOfConfig":"19"},{"size":800,"mtime":1609770496910,"results":"22","hashOfConfig":"19"},{"size":4035,"mtime":1609760158713,"results":"23","hashOfConfig":"19"},{"size":2792,"mtime":1609591096180,"results":"24","hashOfConfig":"19"},{"size":1692,"mtime":1609590702888,"results":"25","hashOfConfig":"19"},{"size":495,"mtime":1609759582300,"results":"26","hashOfConfig":"19"},{"size":379,"mtime":1609590702888,"results":"27","hashOfConfig":"19"},{"size":534,"mtime":1609151977052,"results":"28","hashOfConfig":"19"},{"size":949,"mtime":1609759569252,"results":"29","hashOfConfig":"19"},{"size":313,"mtime":1609734984480,"results":"30","hashOfConfig":"19"},{"size":312,"mtime":1609759680415,"results":"31","hashOfConfig":"19"},{"size":172,"mtime":1609760391380,"results":"32","hashOfConfig":"19"},{"size":163,"mtime":1609760395387,"results":"33","hashOfConfig":"19"},{"size":154,"mtime":1609760408511,"results":"34","hashOfConfig":"19"},{"size":163,"mtime":1609760400191,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1i47tem",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\programming\\js\\react\\react-weather\\src\\index.tsx",[],["73","74"],"D:\\programming\\js\\react\\react-weather\\src\\components\\App.tsx",["75"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport { createMuiTheme, CssBaseline, ThemeProvider } from '@material-ui/core'\r\n\r\nimport MainPage from './MainPage'\r\n\r\nimport { IError, IWeatherData } from '../types'\r\nimport WeatherService from '../apis/WeatherService'\r\n\r\nimport { AsideContext, DarkModeContext, FetchingContext, WeatherDataContext } from '../context'\r\n\r\nconst App = () => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [isDarkMode, setIsDarkMode] = useState(false)\r\n  const [weatherData, setWeatherData] = useState<IWeatherData>({ weatherList: [], name: '' })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<IError>({ isError: false, message: '' })\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      setIsLoading(true)\r\n      navigator.geolocation.getCurrentPosition(({ coords }) => {\r\n        WeatherService.fetchWeatherByCoords(coords.latitude, coords.longitude)\r\n          .then(setWeatherData)\r\n          .catch(catchWeatherAPIError)\r\n          .finally(() => setIsLoading(false))\r\n      }, catchPositionError)\r\n    } else {\r\n      onError('Геолокация недоступна, введите город вручную.')\r\n    }\r\n  }, [])\r\n\r\n  const onError = (message: string) => {\r\n    setError({\r\n      isError: true,\r\n      message\r\n    })\r\n  }\r\n\r\n  const resetError = () => {\r\n    setError({\r\n      isError: false,\r\n      message: ''\r\n    })\r\n  }\r\n\r\n  const resetWeatherData = () => {\r\n    setWeatherData({\r\n      name: '',\r\n      weatherList: []\r\n    })\r\n  }\r\n\r\n  const catchPositionError = (err: GeolocationPositionError) => {\r\n    switch (err.code) {\r\n      case 1:\r\n        onError('Геолокация выключена, введите местоположение вручную.')\r\n        break\r\n      case 2:\r\n        onError('Не удалось получить геолокацию.')\r\n        break\r\n      default:\r\n        onError('Ошибка сети или сервера.')\r\n        break\r\n    }\r\n  }\r\n\r\n  const catchWeatherAPIError = (err: Error) => {\r\n    switch (err.message) {\r\n      case '404':\r\n        onError('Город не найден.')\r\n        break\r\n      case '429':\r\n        onError('Слишком много запросов в минуту.')\r\n        break\r\n      default:\r\n        onError('Ошибка сети или сервера.')\r\n        break\r\n    }\r\n    resetWeatherData()\r\n  }\r\n\r\n  const setWeatherByCityName = (city: string) => (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (city.length > 0) {\r\n      resetError()\r\n      setIsLoading(true)\r\n      WeatherService.fetchWeatherByCityName(city)\r\n        .then(setWeatherData)\r\n        .catch(catchWeatherAPIError)\r\n        .finally(() => setIsLoading(false))\r\n    }\r\n  }\r\n\r\n  const toggleNavbar = (open: boolean) => (\r\n    event: React.KeyboardEvent | React.MouseEvent,\r\n  ) => {\r\n    if (\r\n      event.type === 'keydown' &&\r\n      ((event as React.KeyboardEvent).key === 'Tab' ||\r\n        (event as React.KeyboardEvent).key === 'Shift')\r\n    ) {\r\n      return\r\n    }\r\n\r\n    setIsOpen(open)\r\n  }\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(prevState => !prevState)\r\n  }\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: isDarkMode ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [isDarkMode],\r\n  )\r\n\r\n  const { name, weatherList } = weatherData\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AsideContext.Provider value={{ isOpen, toggleNavbar }} >\r\n        <DarkModeContext.Provider value={{ isDarkMode, toggleDarkMode }}>\r\n          <FetchingContext.Provider value={{ error, isLoading }}>\r\n            <WeatherDataContext.Provider value={{ setWeatherByCityName, currentPlace: name, weatherList }}>\r\n              <CssBaseline />\r\n              <MainPage />\r\n            </WeatherDataContext.Provider>\r\n          </FetchingContext.Provider>\r\n        </DarkModeContext.Provider>\r\n      </AsideContext.Provider>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App","D:\\programming\\js\\react\\react-weather\\src\\components\\Header.tsx",[],"D:\\programming\\js\\react\\react-weather\\src\\components\\WeatherList.tsx",[],"D:\\programming\\js\\react\\react-weather\\src\\components\\Navbar.tsx",["76"],"import React, { ContextType, useContext } from 'react';\r\n\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Close,\r\n    NightsStayOutlined,\r\n    HomeOutlined,\r\n    WbSunnyOutlined,\r\n    Mail,\r\n    GitHub,\r\n    Telegram\r\n} from '@material-ui/icons'\r\nimport {\r\n    Button,\r\n    Divider,\r\n    Drawer,\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n    ButtonGroup,\r\n    FormControlLabel,\r\n    Switch\r\n} from '@material-ui/core'\r\nimport { AsideContext } from '../context/asideContext';\r\nimport { DarkModeContext } from '../context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        width: 260,\r\n    },\r\n    homeBtn: {\r\n        flex: 1\r\n    },\r\n    btnGroup: {\r\n        display: 'flex'\r\n    },\r\n    switchContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        marginRight: 0,\r\n        padding: '0 1rem',\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.black, 0.04),\r\n        }\r\n    },\r\n    switchInfo: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        flex: 1\r\n    },\r\n    switchBtn: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    BottomNavigation: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n    BottomNavigationAction: {\r\n        minWidth: 60,\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.black, 0.04),\r\n        }\r\n    }\r\n}))\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles()\r\n    const { isOpen, toggleNavbar } = useContext(AsideContext)\r\n    const { isDarkMode, toggleDarkMode } = useContext(DarkModeContext)\r\n\r\n    return (\r\n        <Drawer open={isOpen} onClose={toggleNavbar!(false)}>\r\n            <div className={classes.content}>\r\n                <ButtonGroup className={classes.btnGroup} variant=\"text\">\r\n                    <Button href=\"#\" className={classes.homeBtn} startIcon={<HomeOutlined />} >\r\n                        Home\r\n                    </Button>\r\n                    <Button onClick={toggleNavbar!(false)}>\r\n                        <Close />\r\n                    </Button>\r\n                </ButtonGroup>\r\n                <Divider />\r\n                <FormControlLabel\r\n                    className={classes.switchContainer}\r\n                    control={\r\n                        <Switch\r\n                            checked={isDarkMode}\r\n                            onChange={toggleDarkMode}\r\n                            name=\"theme-switch\"\r\n                            color=\"default\"\r\n                        />\r\n                    }\r\n                    label={<span className={classes.switchBtn}>{isDarkMode ? <NightsStayOutlined /> : <WbSunnyOutlined />}</span>}\r\n                />\r\n                <Divider />\r\n                <BottomNavigation className={classes.BottomNavigation} >\r\n                    <BottomNavigationAction\r\n                        className={classes.BottomNavigationAction}\r\n                        rel=\"noopener\"\r\n                        target=\"_blank\"\r\n                        href=\"mailto:alexandr.bulgatov13@gmail.com\"\r\n                        icon={<Mail />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.BottomNavigationAction}\r\n                        rel=\"noopener\"\r\n                        target=\"_blank\"\r\n                        href=\"https://github.com/doyouwannatea/\"\r\n                        icon={<GitHub />}\r\n                    />\r\n                    <BottomNavigationAction\r\n                        className={classes.BottomNavigationAction}\r\n                        rel=\"noopener\"\r\n                        target=\"_blank\"\r\n                        href=\"https://t.me/doyouwannatea\"\r\n                        icon={<Telegram />}\r\n                    />\r\n                </BottomNavigation>\r\n            </div>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default Navbar","D:\\programming\\js\\react\\react-weather\\src\\components\\WeatherItem.tsx",[],"D:\\programming\\js\\react\\react-weather\\src\\apis\\WeatherService.ts",[],"D:\\programming\\js\\react\\react-weather\\src\\types\\index.ts",[],"D:\\programming\\js\\react\\react-weather\\src\\components\\Error.tsx",[],"D:\\programming\\js\\react\\react-weather\\src\\components\\Loader.tsx",[],"D:\\programming\\js\\react\\react-weather\\src\\types\\WeatherListItem.ts",[],"D:\\programming\\js\\react\\react-weather\\src\\components\\MainPage.tsx",[],"D:\\programming\\js\\react\\react-weather\\src\\context\\index.ts",[],"D:\\programming\\js\\react\\react-weather\\src\\context\\weatherDataContext.ts",[],"D:\\programming\\js\\react\\react-weather\\src\\context\\fetchingContext.ts",[],"D:\\programming\\js\\react\\react-weather\\src\\context\\asideContext.ts",[],"D:\\programming\\js\\react\\react-weather\\src\\context\\darkModeContext.ts",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":31,"column":6,"nodeType":"83","endLine":31,"endColumn":8,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":28},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'catchPositionError' and 'catchWeatherAPIError'. Either include them or remove the dependency array.","ArrayExpression",["91"],"@typescript-eslint/no-unused-vars","'ContextType' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [catchPositionError, catchWeatherAPIError]",{"range":"94","text":"95"},[1195,1197],"[catchPositionError, catchWeatherAPIError]"]
[{"D:\\programming\\js\\react\\react-weather\\src\\index.tsx":"1","D:\\programming\\js\\react\\react-weather\\src\\components\\App.tsx":"2","D:\\programming\\js\\react\\react-weather\\src\\components\\Header.tsx":"3","D:\\programming\\js\\react\\react-weather\\src\\components\\WeatherList.tsx":"4","D:\\programming\\js\\react\\react-weather\\src\\components\\Navbar.tsx":"5","D:\\programming\\js\\react\\react-weather\\src\\components\\WeatherItem.tsx":"6","D:\\programming\\js\\react\\react-weather\\src\\apis\\WeatherService.ts":"7","D:\\programming\\js\\react\\react-weather\\src\\types\\index.ts":"8","D:\\programming\\js\\react\\react-weather\\src\\types\\WeatherData.ts":"9","D:\\programming\\js\\react\\react-weather\\src\\dummyWeather.js":"10","D:\\programming\\js\\react\\react-weather\\src\\components\\Error.tsx":"11","D:\\programming\\js\\react\\react-weather\\src\\components\\Loader.tsx":"12"},{"size":182,"mtime":1608717067620,"results":"13","hashOfConfig":"14"},{"size":3233,"mtime":1609053311818,"results":"15","hashOfConfig":"14"},{"size":3531,"mtime":1608983061289,"results":"16","hashOfConfig":"14"},{"size":686,"mtime":1609053248960,"results":"17","hashOfConfig":"14"},{"size":4025,"mtime":1608953854590,"results":"18","hashOfConfig":"14"},{"size":2239,"mtime":1608983819391,"results":"19","hashOfConfig":"14"},{"size":1659,"mtime":1609046877303,"results":"20","hashOfConfig":"14"},{"size":375,"mtime":1608959385144,"results":"21","hashOfConfig":"14"},{"size":822,"mtime":1609044094409,"results":"22","hashOfConfig":"14"},{"size":1010,"mtime":1608959877848,"results":"23","hashOfConfig":"14"},{"size":351,"mtime":1609052551679,"results":"24","hashOfConfig":"14"},{"size":534,"mtime":1609051843589,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1i47tem",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\programming\\js\\react\\react-weather\\src\\index.tsx",[],["54","55"],"D:\\programming\\js\\react\\react-weather\\src\\components\\App.tsx",[],"D:\\programming\\js\\react\\react-weather\\src\\components\\Header.tsx",[],"D:\\programming\\js\\react\\react-weather\\src\\components\\WeatherList.tsx",[],"D:\\programming\\js\\react\\react-weather\\src\\components\\Navbar.tsx",[],"D:\\programming\\js\\react\\react-weather\\src\\components\\WeatherItem.tsx",["56"],"import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Divider,\r\n    Grid,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    Typography\r\n} from \"@material-ui/core\"\r\nimport { IWeatherData } from '../types'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        borderRadius: 0,\r\n        marginBottom: 1\r\n    },\r\n    weatherIconWrapper: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginLeft: 'auto',\r\n        marginRight: '1rem',\r\n    },\r\n    weatherIcon: {\r\n        width: 75,\r\n        height: 75\r\n    },\r\n    temp: {\r\n        minWidth: 40,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column'\r\n    }\r\n})\r\n\r\n\r\ntype Props = {} & IWeatherData\r\n    \r\nconst WeatherItem: React.FC<Props> = ({ day, icon, main, temp }) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardContent>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Typography variant=\"h5\" component=\"div\">\r\n                                {day}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" component=\"div\">\r\n                                {main}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item className={classes.weatherIconWrapper}>\r\n                            <img src={`http://openweathermap.org/img/wn/${icon}@4x.png`} alt={main} className={classes.weatherIcon} />\r\n                        </Grid>\r\n                        <Grid item className={classes.temp}>\r\n                            <Typography variant=\"subtitle2\" component=\"div\">\r\n                                {temp.tempMin}°С\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle2\" component=\"div\">\r\n                                {temp.tempMax}°С\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default WeatherItem","D:\\programming\\js\\react\\react-weather\\src\\apis\\WeatherService.ts",[],"D:\\programming\\js\\react\\react-weather\\src\\types\\index.ts",[],"D:\\programming\\js\\react\\react-weather\\src\\types\\WeatherData.ts",[],"D:\\programming\\js\\react\\react-weather\\src\\dummyWeather.js",["57"],"export default [{\r\n    \"dt\": \"2020-12-26 06:00:00\",\r\n    \"day\": \"Saturday\",\r\n    \"icon\": \"03d\",\r\n    \"main\": \"Clouds\",\r\n    \"temp\": {\r\n        \"temp\": -25,\r\n        \"tempMin\": -21,\r\n        \"tempMax\": -19\r\n    }\r\n}, {\r\n    \"dt\": \"2020-12-27 06:00:00\",\r\n    \"day\": \"Sunday\",\r\n    \"icon\": \"04d\",\r\n    \"main\": \"Clouds\",\r\n    \"temp\": {\r\n        \"temp\": -33,\r\n        \"tempMin\": -26,\r\n        \"tempMax\": -26\r\n    }\r\n}, {\r\n    \"dt\": \"2020-12-28 06:00:00\",\r\n    \"day\": \"Monday\",\r\n    \"icon\": \"04d\",\r\n    \"main\": \"Clouds\",\r\n    \"temp\": {\r\n        \"temp\": -33,\r\n        \"tempMin\": -27,\r\n        \"tempMax\": -27\r\n    }\r\n}, {\r\n    \"dt\": \"2020-12-29 06:00:00\",\r\n    \"day\": \"Tuesday\",\r\n    \"icon\": \"04d\",\r\n    \"main\": \"Clouds\",\r\n    \"temp\": {\r\n        \"temp\": -31,\r\n        \"tempMin\": -26,\r\n        \"tempMax\": -26\r\n    }\r\n}, {\r\n    \"dt\": \"2020-12-30 06:00:00\",\r\n    \"day\": \"Wednesday\",\r\n    \"icon\": \"01d\",\r\n    \"main\": \"Clear\",\r\n    \"temp\": {\r\n        \"temp\": -27,\r\n        \"tempMin\": -23,\r\n        \"tempMax\": -23\r\n    }\r\n}]",["58","59"],"D:\\programming\\js\\react\\react-weather\\src\\components\\Error.tsx",[],"D:\\programming\\js\\react\\react-weather\\src\\components\\Loader.tsx",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":5,"column":5,"nodeType":"66","messageId":"67","endLine":5,"endColumn":12},{"ruleId":"68","severity":1,"message":"69","line":1,"column":1,"nodeType":"70","endLine":51,"endColumn":3},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]